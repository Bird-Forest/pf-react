{"version":3,"file":"static/js/760.bfcdab53.chunk.js","mappings":"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","sources":["components/FormikFairbase/Form.styled.js","components/FormikFairbase/FormError.jsx","components/FormikFairbase/FormikSignIn.jsx","components/FormikFairbase/SignIn.jsx","components/Portal/Portal.styled.js","components/Portal/AuthError.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport myAgree from '../../img/3check.png';\n\nexport const FormikPageWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: #fafafa;\n  margin: 0;\n  padding: 0;\n`;\nexport const WrapNavSign = styled.nav`\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #757575;\n  gap: 8px;\n  width: 100%;\n  /* height: 60px; */\n  margin: 0;\n  padding: 0;\n  .navigate {\n    font-family: 'Prompt', sans-serif;\n    font-size: clamp(0.75rem, 0.568rem + 0.91vw, 1.25rem);\n    font-weight: 700;\n    margin: 0;\n    color: #212121;\n    text-decoration: none;\n    transition: all 0.3s;\n    cursor: pointer;\n    padding: 8px 0;\n    &.active {\n      color: white;\n    }\n  }\n  @media screen and (min-width: 767px) {\n    /* min-height: 80px; */\n    gap: 40px;\n  }\n`;\n// *******  All form **************\nexport const WrapFormUp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  /* gap: 16px; */\n  margin: 0;\n  .form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    padding: 16px;\n  }\n`;\n// ******** Auth form **************\nexport const AuthForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 360px;\n  height: max-content;\n  margin: 0;\n  padding: 8px;\n  .title-auth {\n    font-size: 16px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    margin-bottom: 4px;\n  }\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  padding: 0;\n  margin: 8px auto 8px auto;\n  .input {\n    width: 300px;\n    height: 20px;\n    font-size: 12px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 4px 8px;\n    &:focus + label,\n    &:not(:placeholder-shown) + label {\n      transform: translateY(-20px);\n      font-size: 12px;\n      text-align: center;\n      color: #616161;\n      outline: #616161;\n    }\n  }\n  .label {\n    position: absolute;\n    top: 32%;\n    left: 28px;\n    /* transform: translateY(-50%); */\n    transform: translateY(-32%);\n    font-size: 12px;\n    text-align: center;\n    color: #616161;\n    background-color: white;\n    pointer-events: none;\n    transition: all 0.2s ease-in-out;\n    padding: 0;\n    margin: 0;\n  }\n`;\n// ************ Select form ***********\nexport const SelectFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 360px;\n  height: 68px;\n  padding: 8px;\n  margin: 0;\n  .title-select {\n    font-size: 16px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    margin-bottom: 4px;\n    /* padding: 8px; */\n  }\n  .form-select {\n    width: 316px;\n    height: 36px;\n    font-size: 12px;\n    font-weight: 400;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    /* padding: 4px 8px; */\n    margin: 0;\n  }\n  .option {\n    font-size: 12px;\n    color: #616161;\n    /* border-radius: 8px;\n    outline: #616161; */\n  }\n`;\n// *********** Textarea form *************\nexport const AreaFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 360px;\n  /* height: 100px; */\n  margin: 0;\n  padding: 8px;\n  .title-area {\n    font-size: 16px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin-bottom: 8px;\n  }\n  .textarea {\n    width: 308px;\n    height: 40px;\n    font-size: 16px;\n    font-weight: 400;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n`;\n// ************  Rating ********************\nexport const RatingFormWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 200px;\n  height: 24px;\n  padding: 8px;\n  margin: 0;\n  .title-rating {\n    font-size: 16px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin-bottom: 8px;\n  }\n  .rating {\n    width: 32px;\n    height: 24px;\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 0;\n    margin: 0;\n  }\n`;\n// ************  Checkbox ********************\nexport const CheckboxFormWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 300px;\n  height: 20px;\n  margin: 0;\n  padding: 8px;\n  .title-checkbox {\n    display: flex;\n    justify-content: ctnter;\n    align-items: center;\n    font-size: 12px;\n    font-weight: 400;\n    text-align: center;\n    color: #616161;\n  }\n  .checkbox {\n    width: 20px;\n    height: 20px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 0;\n    margin: 0;\n  }\n`;\n// ********** Button- submit ***************\nexport const BtnForm = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 16px;\n  font-weight: 700;\n  background-color: #bdbdbd;\n  border-radius: 16px;\n  border: 1px solid #bdbdbd;\n  outline: #bdbdbd;\n  width: 360px;\n  height: 40px;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #757575;\n  }\n`;\n// ********** Erorr ************************\nexport const ErrorText = styled.div`\n  display: flex;\n  justify-content: centr;\n  align-items: center;\n  text-align: center;\n  width: 300px;\n  font-size: 12px;\n  color: #ff1744;\n  padding: 0;\n  margin: 0;\n`;\n// ***************    MyForm  *****************\nexport const MyStyled = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: #fafafa;\n  margin: 0;\n  padding: 0;\n\n  .my-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-width: 300px;\n    background-color: white;\n    border-radius: 16px;\n    border: 2px solid #eeeeee;\n    margin: 8px auto;\n    gap: 4px;\n    padding: 8px;\n  }\n  .my-title {\n    font-size: clamp(0.75rem, 0.659rem + 0.45vw, 1rem);\n    text-align: center;\n    font-weight: 500;\n    color: #616161;\n    padding: 0;\n    margin: 0;\n  }\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    color: white;\n    font-size: 16px;\n    font-weight: 700;\n    background-color: #bdbdbd;\n    border-radius: 16px;\n    border: 1px solid #bdbdbd;\n    outline: #bdbdbd;\n    /* width: 300px; */\n    height: 40px;\n    margin: 0;\n    padding: 0 100px;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #757575;\n    }\n    @media screen and (min-width: 767px) {\n      margin: 8px auto;\n    }\n  }\n`;\nexport const ErrorMessage = styled.div`\n  color: #ff1744;\n  font-size: 12px;\n`;\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 8px auto 8px auto;\n  .my-input {\n    display: flex;\n    flex-grow: 1;\n    /* height: 20px; */\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 4px 8px;\n    margin: 0;\n  }\n  .my-input.error {\n    border: 2px solid #ff1744;\n  }\n  .label-input {\n    position: absolute;\n    top: -24%;\n    left: 28px;\n    font-size: 12px;\n    text-align: center;\n    color: #616161;\n    background-color: white;\n    pointer-events: none;\n    transition: all 0.2s ease-in-out;\n    padding: 0;\n    margin: 0;\n  }\n  .label-input.error {\n    color: #ff1744;\n  }\n  .my-password {\n    display: flex;\n    flex-grow: 1;\n    /* height: 20px; */\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 4px 8px;\n    margin: 0;\n  }\n  .my-password.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const ShowPasswordButton = styled.button`\n  position: absolute;\n  top: 45%;\n  right: 0;\n  transform: translateY(-45%);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  .icon-eye {\n    width: 24px;\n    height: 24px;\n    fill: #616161;\n  }\n`;\nexport const SelectWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  /* width: 360px; */\n  max-width: 400px;\n  /* height: 80px; */\n  padding: 0;\n\n  .label-select {\n    font-size: clamp(0.75rem, 0.659rem + 0.45vw, 1rem);\n    text-align: center;\n    font-weight: 500;\n    color: #616161;\n    padding: 0;\n    margin: 0 0 8px 0;\n  }\n  .my-select {\n    box-sizing: border-box;\n    display: flex;\n    flex-grow: 1;\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 4px 12px;\n    margin: 0;\n  }\n  .my-select.error {\n    border: 2px solid #ff1744;\n  }\n  .default {\n  }\n  .my-option {\n    font-size: 16px;\n    color: #616161;\n    padding: 0;\n    margin: 0;\n  }\n`;\nexport const TextareaWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  /* width: 360px; */\n  max-width: 400px;\n  /* height: 100px; */\n  margin: 0;\n  .label-textarea {\n    font-size: clamp(0.75rem, 0.659rem + 0.45vw, 1rem);\n    text-align: center;\n    font-weight: 500;\n    color: #616161;\n    padding: 0;\n    margin: 0 0 8px 0;\n  }\n  .my-textarea {\n    display: flex;\n    /* width: 308px; */\n    display: flex;\n    flex-grow: 1;\n    /* height: 100px; */\n    font-size: 16px;\n    font-weight: 500;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .my-textarea.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const RatingWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n  .label-rating {\n    font-size: clamp(0.75rem, 0.659rem + 0.45vw, 1rem);\n    text-align: center;\n    font-weight: 500;\n    color: #616161;\n    padding: 0;\n    margin: 0 0 8px 0;\n  }\n  .my-rating {\n    width: 60px;\n    height: 28px;\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 0;\n    margin: 0;\n  }\n  .my-rating.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const CheckboxWrap = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  /* width: 360px; */\n  height: 28px;\n  margin: 0;\n  padding: 0;\n  .my-checkbox {\n    position: absolute;\n    opacity: 0;\n    left: 47px;\n    width: 18px;\n    height: 18px;\n    padding: 0;\n    margin: 0;\n  }\n  .label-checkbox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    font-weight: 400;\n    text-align: center;\n    color: #616161;\n    margin: 0;\n  }\n  .label-checkbox::before {\n    /* z-index: 1; */\n    display: block;\n    width: 18px;\n    height: 18px;\n    border: 2px solid #ff1744;\n    border-radius: 4px;\n    background: white;\n    transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    content: '';\n    margin-right: 8px;\n  }\n  .my-checkbox:hover + .label-checkbox::before,\n  .my-checkbox:focus + .label-checkbox::before {\n    border: 2px solid #616161;\n  }\n  .my-checkbox:checked + .label-checkbox::before {\n    display: block;\n    opacity: 1;\n    cursor: pointer;\n    content: '';\n    width: 20px;\n    height: 20px;\n    border: transparent;\n    background-image: url(${myAgree});\n    background-size: cover;\n  }\n`;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from './Form.styled';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { AuthForm, BtnForm, InputBox, WrapFormUp } from './Form.styled';\nimport FormError from './FormError';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email().required(),\n  password: Yup.string().required(),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport default function FormikSignIn({ onAutorization }) {\n  const handleSubmit = (values, { resetForm }) => {\n    const email = values.email;\n    const password = values.password;\n    onAutorization(email, password);\n    // console.log(values);\n    resetForm();\n  };\n  return (\n    <WrapFormUp>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\" className=\"form\">\n          <AuthForm>\n            <h3 className=\"title-auth\">Autorization</h3>\n            <InputBox>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"\"\n                className=\"input\"\n              />\n              <label htmlFor=\"email\" className=\"label\">\n                Email*\n              </label>\n              <FormError name=\"email\" />\n            </InputBox>\n            <InputBox>\n              <Field\n                name=\"password\"\n                type=\"text\"\n                placeholder=\"\"\n                className=\"input\"\n              />\n              <label htmlFor=\"password\" className=\"label\">\n                Password*\n              </label>\n              <FormError name=\"password\" />\n            </InputBox>\n          </AuthForm>\n          <BtnForm type=\"submit\">Submit</BtnForm>\n        </Form>\n      </Formik>\n    </WrapFormUp>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setUser } from 'store/slices/userSlice';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport FormikSignIn from './FormikSignIn';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport AuthError from 'components/Portal/AuthError';\n\nexport default function SignIn() {\n  const [showError, setShowError] = useState(false);\n  const [errorMes, setErrorMes] = useState('');\n  const dispatch = useDispatch();\n  // const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/';\n  const auth = getAuth();\n\n  const handleSignIn = (email, password) => {\n    // evt.preventDefault();\n    // const email = evt.target.elements.email.value;\n    // const password = evt.target.elements.pass.value;\n    // console.log(email, password);\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then(userCredential => {\n        // console.log(userCredential.user);\n        dispatch(\n          setUser({\n            email: userCredential.user.email,\n            id: userCredential.user.uid,\n            token: userCredential.user.accessToken,\n          })\n        );\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        console.log(errorCode);\n        const errorMessage = error.message;\n        // console.error(errorMessage);\n        setErrorMes(errorMessage);\n        setShowError(true);\n      });\n  };\n\n  return (\n    <div>\n      <FormikSignIn onAutorization={handleSignIn} />\n      {showError &&\n        createPortal(\n          <AuthError message={errorMes} onClose={() => setShowError(false)} />,\n          document.body\n        )}\n    </div>\n  );\n}\n","import styled from 'styled-components';\nexport const ErrorMessageWrap = styled.div`\n  position: fixed;\n  top: 60%;\n  left: 57%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 240px;\n  height: 80px;\n  padding: 20px;\n  border-radius: 8px;\n  border: 4px solid #ff1744;\n  background-color: #fafafa;\n  transform: translate(-50%, -50%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  .link-page {\n    font-size: 20px;\n    font-weight: 500;\n    text-align: center;\n    color: #424242;\n    list-style: none;\n  }\n`;\nexport const BtnError = styled.button`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  border: none;\n  background-color: #fafafa;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  .close-icon {\n    width: 24px;\n    height: 24px;\n    fill: #424242;\n  }\n`;\nexport const ErrorText = styled.p`\n  font-size: 20px;\n  text-align: center;\n  color: #424242;\n`;\n","import React from 'react';\nimport { BtnError, ErrorMessageWrap, ErrorText } from './Portal.styled';\nimport { IoClose } from 'react-icons/io5';\nimport { Link } from 'react-router-dom';\n\nexport default function AuthError({ message, onClose }) {\n  return (\n    <ErrorMessageWrap>\n      <BtnError type=\"button\" onClick={onClose}>\n        <IoClose className=\"close-icon\" />\n      </BtnError>\n      {message === 'Firebase: Error (auth/email-already-in-use).' && (\n        <>\n          <ErrorText>\n            This user already exists. Please follow the link\n          </ErrorText>\n          <Link to=\"/fairbase/signin\" className=\"link-page\">\n            Sign In\n          </Link>\n        </>\n      )}\n      {message === 'Firebase: Error (auth/invalid-login-credentials).' && (\n        <>\n          <ErrorText>You are not registered. Please follow the link</ErrorText>\n          <Link to=\"/fairbase/signup\" className=\"link-page\">\n            Sign Up\n          </Link>\n        </>\n      )}\n    </ErrorMessageWrap>\n  );\n}\n\n//  {\n//    message === 'Firebase: Error (auth/email-already-in-use).' ? (\n//      <>\n//        <ErrorText>This user already exists. Please follow the link</ErrorText>\n//        <Link to=\"/fairbase/signin\" className=\"link-page\">\n//          Sign In\n//        </Link>\n//      </>\n//    ) : (\n//      <ErrorText>Something went wrong</ErrorText>\n//    );\n//  }\n//  {\n//    message === 'Firebase: Error (auth/invalid-login-credentials).' ? (\n//      <>\n//        <ErrorText>You are not registered. Please follow the link</ErrorText>\n//        <Link to=\"/fairbase/signup\" className=\"link-page\">\n//          Sign Up\n//        </Link>\n//      </>\n//    ) : (\n//      <ErrorText>Something went wrong</ErrorText>\n//    );\n//  }\n"],"names":["FormikPageWrap","styled","WrapNavSign","WrapFormUp","AuthForm","InputBox","SelectFormWrap","AreaFormWrap","RatingFormWrap","CheckboxFormWrap","BtnForm","ErrorText","MyStyled","ErrorMessage","InputWrap","ShowPasswordButton","SelectWrap","TextareaWrap","RatingWrap","CheckboxWrap","FormError","name","render","message","validationSchema","Yup","email","required","password","initialValues","FormikSignIn","onAutorization","onSubmit","values","resetForm","autoComplete","className","type","placeholder","htmlFor","SignIn","useState","showError","setShowError","errorMes","setErrorMes","dispatch","useDispatch","auth","getAuth","signInWithEmailAndPassword","then","userCredential","setUser","user","id","uid","token","accessToken","catch","error","errorCode","code","console","log","errorMessage","createPortal","AuthError","onClose","document","body","ErrorMessageWrap","BtnError","onClick","to"],"sourceRoot":""}