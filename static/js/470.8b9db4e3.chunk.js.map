{"version":3,"file":"static/js/470.8b9db4e3.chunk.js","mappings":"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","sources":["components/FormikFairbase/Form.styled.js","components/FormikFairbase/MyTextInput.jsx","components/FormikFairbase/MySelect.jsx","components/FormikFairbase/MyTextarea.jsx","components/FormikFairbase/MyRating.jsx","components/FormikFairbase/MyCheckbox.jsx","components/FormikFairbase/MyPassword.jsx","components/FormikFairbase/MyForm.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport myAgree from '../../img/3check.png';\n\nexport const FormikPageWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: #fafafa;\n  margin: 0 auto;\n  padding: 0;\n`;\nexport const WrapNavSign = styled.nav`\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #757575;\n  gap: 8px;\n  width: 100%;\n  height: 60px;\n  margin: 0;\n  padding: 0;\n  .navigate {\n    font-family: 'Prompt', sans-serif;\n    font-size: clamp(1rem, 0.724rem + 1.38vw, 1.5rem);\n    font-weight: 700;\n    margin: 0;\n    color: #212121;\n    text-decoration: none;\n    transition: all 0.3s;\n    cursor: pointer;\n    &.active {\n      color: white;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    min-height: 80px;\n    gap: 40px;\n  }\n`;\n// *******  All form **************\nexport const WrapFormUp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin: 0;\n  .form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    padding: 20px;\n  }\n`;\n// ******** Auth form **************\nexport const AuthForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 360px;\n  height: max-content;\n  margin: 0;\n  padding: 0 0 8px 0;\n  .title-auth {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 8px;\n  }\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  padding: 0;\n  margin: 8px auto 8px auto;\n  .input {\n    width: 300px;\n    height: 24px;\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n    &:focus + label,\n    &:not(:placeholder-shown) + label {\n      transform: translateY(-28px);\n      font-size: 16px;\n      text-align: center;\n      color: #616161;\n      outline: #616161;\n    }\n  }\n  .label {\n    position: absolute;\n    top: 32%;\n    left: 28px;\n    /* transform: translateY(-50%); */\n    transform: translateY(-32%);\n    font-size: 16px;\n    text-align: center;\n    color: #616161;\n    background-color: white;\n    pointer-events: none;\n    transition: all 0.2s ease-in-out;\n    padding: 0;\n    margin: 0;\n  }\n`;\n// ************ Select form ***********\nexport const SelectFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 360px;\n  height: 104px;\n  padding: 0 0 8px 0;\n  margin: 0;\n  .title-select {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 8px 0 8px 0;\n  }\n  .form-select {\n    width: 316px;\n    height: 40px;\n    font-size: 16px;\n    font-weight: 500;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .option {\n    font-size: 16px;\n    color: #616161;\n    border-radius: 8px;\n    outline: #616161;\n  }\n`;\n// *********** Textarea form *************\nexport const AreaFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 360px;\n  height: 192px;\n  margin: 0;\n  .title-area {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 8px 0 8px 0;\n  }\n  .textarea {\n    width: 308px;\n    height: 100px;\n    font-size: 16px;\n    font-weight: 500;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n`;\n// ************  Rating ********************\nexport const RatingFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 200px;\n  height: 88px;\n  padding: 0;\n  margin: 0;\n  .title-rating {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 8px 0 8px 0;\n  }\n  .rating {\n    width: 60px;\n    height: 28px;\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 0;\n    margin: 0;\n  }\n`;\n// ************  Checkbox ********************\nexport const CheckboxFormWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 360px;\n  height: 48px;\n  margin: 0;\n  padding: 0;\n  .title-checkbox {\n    display: flex;\n    justify-content: ctnter;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    color: #616161;\n  }\n  .checkbox {\n    width: 20px;\n    height: 20px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 0;\n    margin: 0;\n  }\n`;\n// ********** Button- submit ***************\nexport const BtnForm = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 16px;\n  font-weight: 700;\n  background-color: #bdbdbd;\n  border-radius: 16px;\n  border: 1px solid #bdbdbd;\n  outline: #bdbdbd;\n  width: 360px;\n  height: 48px;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #757575;\n  }\n`;\n// ********** Erorr ************************\nexport const ErrorText = styled.div`\n  display: flex;\n  justify-content: centr;\n  align-items: center;\n  text-align: center;\n  width: 300px;\n  font-size: 16px;\n  color: #ff1744;\n  padding: 0;\n  margin: 0;\n`;\n// ***************    MyForm  *****************\nexport const MyStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  margin: 40px auto;\n  .my-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    padding: 20px;\n  }\n  .my-title {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 8px 0 8px 0;\n  }\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-size: 16px;\n    font-weight: 700;\n    background-color: #bdbdbd;\n    border-radius: 16px;\n    border: 1px solid #bdbdbd;\n    outline: #bdbdbd;\n    width: 300px;\n    height: 48px;\n    margin: 0;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #757575;\n    }\n  }\n`;\nexport const ErrorMessage = styled.div`\n  color: #ff1744;\n  font-size: 16px;\n`;\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 8px auto 8px auto;\n  .my-input {\n    width: 300px;\n    height: 24px;\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .my-input.error {\n    border: 2px solid #ff1744;\n  }\n  .label-input {\n    position: absolute;\n    top: -24%;\n    left: 28px;\n    font-size: 16px;\n    text-align: center;\n    color: #616161;\n    background-color: white;\n    pointer-events: none;\n    transition: all 0.2s ease-in-out;\n    padding: 0;\n    margin: 0;\n  }\n  .label-input.error {\n    color: #ff1744;\n  }\n  .my-password {\n    width: 300px;\n    height: 24px;\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .my-password.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const ShowPasswordButton = styled.button`\n  position: absolute;\n  top: 45%;\n  right: 0;\n  transform: translateY(-45%);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  .icon-eye {\n    width: 24px;\n    height: 24px;\n    fill: #616161;\n  }\n`;\nexport const SelectWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 360px;\n  height: 80px;\n  padding: 0 0 8px 0;\n  margin: 0;\n  .label-select {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 8px 0 8px 0;\n  }\n  .my-select {\n    width: 316px;\n    height: 40px;\n    font-size: 16px;\n    font-weight: 500;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .my-select.error {\n    border: 2px solid #ff1744;\n  }\n  .my-option {\n    font-size: 16px;\n    color: #616161;\n    border-radius: 8px;\n    outline: #616161;\n  }\n`;\nexport const TextareaWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 360px;\n  height: 160px;\n  margin: 0;\n  .label-textarea {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 8px 0 8px 0;\n  }\n  .my-textarea {\n    width: 308px;\n    height: 100px;\n    font-size: 16px;\n    font-weight: 500;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .my-textarea.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const RatingWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 200px;\n  height: 88px;\n  padding: 0;\n  margin: 0;\n  .label-rating {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 8px 0 8px 0;\n  }\n  .my-rating {\n    width: 60px;\n    height: 28px;\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 0;\n    margin: 0;\n  }\n  .my-rating.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const CheckboxWrap = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 360px;\n  height: 48px;\n  margin: 0;\n  padding: 0;\n  .my-checkbox {\n    position: absolute;\n    opacity: 0;\n    left: 47px;\n    width: 18px;\n    height: 18px;\n    padding: 0;\n    margin: 0;\n  }\n  .label-checkbox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    color: #616161;\n    margin: 0 8px 0 8px;\n  }\n  .label-checkbox::before {\n    /* z-index: 1; */\n    display: block;\n    width: 18px;\n    height: 18px;\n    border: 2px solid #ff1744;\n    border-radius: 4px;\n    background: white;\n    transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    content: '';\n    margin-right: 8px;\n  }\n  .my-checkbox:hover + .label-checkbox::before,\n  .my-checkbox:focus + .label-checkbox::before {\n    border: 2px solid #616161;\n  }\n  .my-checkbox:checked + .label-checkbox::before {\n    display: block;\n    opacity: 1;\n    cursor: pointer;\n    content: '';\n    width: 20px;\n    height: 20px;\n    border: transparent;\n    background-image: url(${myAgree});\n    background-size: cover;\n  }\n`;\n","import { useField } from 'formik';\nimport React from 'react';\nimport { ErrorMessage, InputWrap } from './Form.styled';\n\nexport default function MyTextInput({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <InputWrap>\n      <label\n        htmlFor={props.id || props.name}\n        className={`label-input ${errorClass}`}\n      >\n        {label}\n      </label>\n      <input className={`my-input ${errorClass}`} {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </InputWrap>\n  );\n}\n","import React from 'react';\nimport { useField } from 'formik';\nimport { ErrorMessage, SelectWrap } from './Form.styled';\n\nexport default function MySelect({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <SelectWrap>\n      <label htmlFor={props.id || props.name} className=\"label-select\">\n        {label}\n      </label>\n      <select {...field} {...props} className={`my-select ${errorClass}`} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </SelectWrap>\n  );\n}\n","import React from 'react';\nimport { useField } from 'formik';\nimport { ErrorMessage, TextareaWrap } from './Form.styled';\n\nexport default function MyTextarea({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <TextareaWrap>\n      <label htmlFor={props.id || props.name} className=\"label-textarea\">\n        {label}\n      </label>\n      <textarea className={`my-textarea ${errorClass}`} {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </TextareaWrap>\n  );\n}\n","import React from 'react';\nimport { useField } from 'formik';\nimport { ErrorMessage, RatingWrap } from './Form.styled';\n\nexport default function MyRating({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <RatingWrap>\n      <label htmlFor={props.id || props.name} className=\"label-rating\">\n        {label}\n      </label>\n      <input className={`my-rating ${errorClass}`} {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </RatingWrap>\n  );\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { CheckboxWrap, ErrorMessage } from './Form.styled';\n\nexport default function MyCheckbox({ children, ...props }) {\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\n  // const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <CheckboxWrap>\n      <input\n        name=\"agreement\"\n        type=\"checkbox\"\n        {...field}\n        {...props}\n        className=\"my-checkbox\"\n      />\n      <label htmlFor=\"agreement\" className=\"label-checkbox\">\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </CheckboxWrap>\n  );\n}\n","import React, { useState } from 'react';\nimport { useField } from 'formik';\nimport { ErrorMessage, InputWrap, ShowPasswordButton } from './Form.styled';\nimport { PiEyeLight, PiEyeSlash } from 'react-icons/pi';\n\nexport default function MyPassword({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const [showPassword, setShowPassword] = useState(false);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <InputWrap>\n      <label\n        htmlFor={props.id || props.name}\n        className={`label-input ${errorClass}`}\n      >\n        {label}\n      </label>\n      <input\n        className={`my-password ${errorClass}`}\n        {...field}\n        {...props}\n        type={showPassword ? 'text' : 'password'}\n      />\n      <ShowPasswordButton onClick={() => setShowPassword(!showPassword)}>\n        {showPassword ? (\n          <PiEyeLight className=\"icon-eye\" />\n        ) : (\n          <PiEyeSlash className=\"icon-eye\" />\n        )}\n      </ShowPasswordButton>\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </InputWrap>\n  );\n}\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { MyStyled } from './Form.styled';\nimport MyTextInput from './MyTextInput';\nimport MySelect from './MySelect';\nimport MyTextarea from './MyTextarea';\nimport MyRating from './MyRating';\nimport MyCheckbox from './MyCheckbox';\nimport MyPassword from './MyPassword';\n\nconst jobType = [\n  'Design UI/UX',\n  'Fullstack',\n  'Project Manager',\n  'Data Analyst',\n  'Sysadmin',\n];\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(15, 'Too Long!')\n    .required('This field is required'),\n  email: Yup.string().email('Invalid email').required('This field is required'),\n  password: Yup.string().required('This field is required'),\n  review: Yup.string().required('This field is required'),\n  rating: Yup.number().required('This field is required'),\n  agreement: Yup.boolean().required('This field is required'),\n  jobType: Yup.string().oneOf(jobType).required('Please select a job type'),\n  date: Yup.date().default(() => new Date()),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  jobType: '',\n  review: '',\n  rating: '0',\n  agreement: false,\n  date: new Date(),\n};\n\nexport default function MyForm() {\n  return (\n    <MyStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(true);\n            resetForm();\n          }, 400);\n        }}\n      >\n        {props => (\n          <Form className=\"my-form\" autoComplete=\"off\">\n            <h3 className=\"my-title\">Registration</h3>\n            <MyTextInput label=\"Name*\" name=\"name\" type=\"text\" />\n            <MyTextInput label=\"Email*\" name=\"email\" type=\"email\" />\n            <MyPassword label=\"Password*\" name=\"password\" type=\"password\" />\n            <MySelect label=\"Job Type\" name=\"jobType\">\n              <option value=\"\" className=\"my-option\">\n                Select a job type\n              </option>\n              {jobType.map((type, idx) => (\n                <option value={type} key={idx} className=\"my-option\">\n                  {type}\n                </option>\n              ))}\n            </MySelect>\n            <MyTextarea label=\"About me\" name=\"review\" type=\"text\" />\n            <MyRating\n              label=\"Experience\"\n              name=\"rating\"\n              type=\"number\"\n              min={0}\n              max={10}\n            />\n            <MyCheckbox label=\"Agreement\" name=\"agreement\" type=\"checkbox\">\n              I accept the terms and conditions\n            </MyCheckbox>\n            <button type=\"submit\" className=\"button\">\n              {props.isSubmitting ? 'loading...' : 'Submit'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </MyStyled>\n  );\n}\n"],"names":["FormikPageWrap","styled","WrapNavSign","WrapFormUp","AuthForm","InputBox","SelectFormWrap","AreaFormWrap","RatingFormWrap","CheckboxFormWrap","BtnForm","ErrorText","MyStyled","ErrorMessage","InputWrap","ShowPasswordButton","SelectWrap","TextareaWrap","RatingWrap","CheckboxWrap","MyTextInput","label","props","useField","field","meta","errorClass","touched","error","htmlFor","id","name","className","MySelect","MyTextarea","MyRating","MyCheckbox","children","type","MyPassword","useState","showPassword","setShowPassword","onClick","jobType","validationSchema","Yup","min","max","required","email","password","review","rating","agreement","oneOf","date","default","Date","initialValues","MyForm","onSubmit","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","autoComplete","value","map","idx","isSubmitting"],"sourceRoot":""}